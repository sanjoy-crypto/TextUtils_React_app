{"version":3,"sources":["Components/Header.js","Components/TextForm.js","Components/Alert.js","App.js","index.js"],"names":["Header","mode","toggleMode","class","href","type","id","className","onClick","htmlFor","TextForm","heading","showAlert","useState","text","setText","style","color","backgroundColor","onChange","e","target","value","rows","console","log","upperText","toUpperCase","lowerText","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","role","message","App","setMode","setAlert","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"sMA+BeA,EA5BA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACpB,OACI,8BACI,qBAAKC,MAAK,yCAAoCF,EAApC,eAA+CA,GAAzD,SACI,sBAAKE,MAAM,YAAX,UACI,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,uBACA,wBAAQD,MAAM,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAA9J,SACI,sBAAMF,MAAM,0BAEhB,sBAAKA,MAAM,2BAA2BG,GAAG,YAAzC,UACI,oBAAIH,MAAM,qBAAV,SACI,oBAAIA,MAAM,WAAV,SACI,mBAAGA,MAAM,kBAAkB,eAAa,OAAOC,KAAK,IAApD,sBAIR,sBAAKG,UAAS,sCAA0C,UAATN,EAAmB,OAAS,SAA3E,UACI,uBAAOE,MAAM,mBAAmBK,QAASN,EAAYG,KAAK,WAAWC,GAAG,2BACxE,uBAAOH,MAAM,mBAAmBM,QAAQ,yBAAxC,4CC2CbC,EA9DE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASV,EAAsB,EAAtBA,KAAMW,EAAgB,EAAhBA,UAC/B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAkCA,OACI,qCACI,sBAAKR,UAAU,iBAAiBS,MAAO,CAAEC,MAAgB,UAAThB,EAAmB,QAAU,SAA7E,UAEI,sBAAKM,UAAU,gBAAf,UACI,mBAAGC,QAXA,WACfO,EAAQ,KAU4BZ,MAAM,uBAC9B,6BAAKQ,IACL,0BAAUK,MAAO,CAAEE,gBAA0B,UAATjB,EAAmB,QAAU,UAAWgB,MAAgB,UAAThB,EAAmB,QAAU,SAAWkB,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOC,QAAQA,MAAOR,EAAMP,UAAU,eAAegB,KAAK,IAAIjB,GAAG,eAG3N,wBAAQE,QAzCK,WACrBgB,QAAQC,IAAI,oBACZ,IAAIC,EAAYZ,EAAKa,cACrBZ,EAAQW,GACRd,EAAU,yBAA0B,YAqCOL,UAAU,kBAA7C,kCACA,wBAAQC,QApCK,WACrB,IAAIoB,EAAYd,EAAKe,cACrBd,EAAQa,GACRhB,EAAU,yBAA0B,YAiCOL,UAAU,kBAA7C,kCACA,wBAAQC,QA/BD,WACf,IAAIM,EAAOgB,SAASC,eAAe,WACnCjB,EAAKkB,SACLC,UAAUC,UAAUC,UAAUrB,EAAKQ,OACnCV,EAAU,2BAA4B,YA2BDL,UAAU,eAAvC,uBACA,wBAAQC,QAzBK,WACrB,IAAI4B,EAAUtB,EAAKuB,MAAM,QACzBtB,EAAQqB,EAAQE,KAAK,MACrB1B,EAAU,2BAA4B,YAsBKL,UAAU,iBAA7C,mCAGJ,sBAAKA,UAAU,YAAYS,MAAO,CAAEC,MAAgB,UAAThB,EAAmB,QAAU,SAAxE,UACI,mDACA,8BAAIa,EAAKuB,MAAM,KAAKE,OAAS,EAA7B,cAA2CzB,EAAKyB,OAAhD,gBACA,8BAAI,KAAQzB,EAAKuB,MAAM,KAAKE,OAA5B,sBACA,yCACA,4BAAIzB,EAAKyB,OAAS,EAAIzB,EAAO,mEC9C9B0B,EAVD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACb,OAEIA,GAAS,sBAAKlC,UAAS,sBAAiBkC,EAAMpC,KAAvB,4CAAuEqC,KAAK,QAA1F,UACL,yBAAQnC,UAAU,kBAAlB,UAAqCkC,EAAMpC,KAA3C,SADK,IACyDoC,EAAME,YC4CjEC,MA3Cf,WACE,MAAwB/B,mBAAS,SAAjC,mBAAOZ,EAAP,KAAa4C,EAAb,KACA,EAA0BhC,mBAAS,MAAnC,mBAAO4B,EAAP,KAAcK,EAAd,KAEMlC,EAAY,SAAC+B,EAAStC,GAC1ByC,EAAS,CACPH,QAASA,EACTtC,KAAMA,IAER0C,YAAW,WACTD,EAAS,QACR,MAgBL,OACE,qCAEE,cAAC,EAAD,CAAQ7C,KAAMA,EAAMC,WAhBL,WACJ,UAATD,GACF4C,EAAQ,QACRf,SAASkB,KAAKhC,MAAME,gBAAkB,UACtCN,EAAU,6BAA8B,aAGxCiC,EAAQ,SACRf,SAASkB,KAAKhC,MAAME,gBAAkB,UACtCN,EAAU,8BAA+B,eAQzC,cAAC,EAAD,CAAO6B,MAAOA,IAEd,cAAC,EAAD,CAAUxC,KAAMA,EAAMW,UAAWA,EAAWD,QAAQ,yCClC1DsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,U","file":"static/js/main.3aa7907d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Header = ({ mode, toggleMode }) => {\r\n    return (\r\n        <div>\r\n            <nav class={`navbar navbar-expand-lg navbar-${mode} bg-${mode}`}>\r\n                <div class=\"container\">\r\n                    <a class=\"navbar-brand\" href=\"/\">TextUtils</a>\r\n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul class=\"navbar-nav me-auto\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${mode === 'light' ? 'dark' : 'light'}`} >\r\n                            <input class=\"form-check-input\" onClick={toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n// git remote add origin git@github.com:sanjoy-crypto/TextUtils_React_app.git","import React, { useState } from 'react'\r\n\r\nconst TextForm = ({ heading, mode, showAlert }) => {\r\n    const [text, setText] = useState('')\r\n\r\n\r\n    const handleUpperClick = () => {\r\n        console.log('text was clicked');\r\n        let upperText = text.toUpperCase()\r\n        setText(upperText)\r\n        showAlert(\"Converted to Uppercase\", \"success\")\r\n    }\r\n    const handleLowerClick = () => {\r\n        let lowerText = text.toLowerCase()\r\n        setText(lowerText)\r\n        showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById('textBox')\r\n        text.select()\r\n        navigator.clipboard.writeText(text.value)\r\n        showAlert(\"Text Copied to Clipboard\", \"success\")\r\n    }\r\n\r\n    const handleExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        showAlert(\"Removed all Extra spaces\", \"success\")\r\n    }\r\n\r\n    const crossClick = () => {\r\n        setText('')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-5\" style={{ color: mode === 'light' ? 'black' : 'white' }}>\r\n\r\n                <div className=\"mb-3 textArea\">\r\n                    <i onClick={crossClick} class=\"fas fa-times cross\"></i>\r\n                    <h3>{heading}</h3>\r\n                    <textarea style={{ backgroundColor: mode === 'light' ? 'white' : '#18191A', color: mode === 'light' ? 'black' : 'white' }} onChange={(e) => setText(e.target.value)} value={text} className=\"form-control\" rows=\"8\" id=\"textBox\"></textarea>\r\n                </div>\r\n\r\n                <button onClick={handleUpperClick} className=\"btn btn-primary\">Convert to Uppercase</button>\r\n                <button onClick={handleLowerClick} className=\"btn btn-success\">Convert to Lowercase</button>\r\n                <button onClick={handleCopy} className=\"btn btn-info\">Copy Text</button>\r\n                <button onClick={handleExtraSpace} className=\"btn btn-danger\">Remove Extra Space</button>\r\n            </div>\r\n\r\n            <div className=\"container\" style={{ color: mode === 'light' ? 'black' : 'white' }}>\r\n                <h3>Your Text Summary</h3>\r\n                <p>{text.split(\" \").length - 1} words and {text.length} character</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n                <h4>Preview</h4>\r\n                <p>{text.length > 0 ? text : 'Enter something in the textbox above to preview it here'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nconst Alert = ({ alert }) => {\r\n    return (\r\n\r\n        alert && <div className={`alert alert-${alert.type} alert-dismissible fade show text-center`} role=\"alert\">\r\n            <strong className=\"text-capitalize\">{alert.type} : </strong> {alert.message}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Header from './Components/Header';\nimport TextForm from './Components/TextForm';\n\nimport Alert from './Components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000)\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#18191A'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = '#ffffff'\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n\n      <Header mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <TextForm mode={mode} showAlert={showAlert} heading=\"Enter the text to analyze below:\" />\n\n\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n;\n"],"sourceRoot":""}